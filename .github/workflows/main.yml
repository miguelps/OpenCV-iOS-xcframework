name: Build OpenCV for iOS

on:
  push:
    branches: [ "opencv" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build OpenCV XCFramework
    runs-on: macOS-12
    env:
      OCV_VER: 4.6.0

    steps:
    - uses: actions/checkout@v3
    - name: opencv-source
      run: |
        echo "Package name:" ${{ env.PACKAGENAME }}
        wget -q https://github.com/opencv/opencv/archive/4.6.0.zip -O opencv-4.6.0.zip
        unzip -q opencv-4.6.0.zip
        cd opencv-4.6.0
    - name: build-ios
      run: |
        run: |
          python3 opencv-4.6.0/platforms/apple/build_xcframework.py --out build \
          --dynamic --disable-bitcode --iphoneos_deployment_target 11 \
          --build_only_specified_archs --iphoneos_archs arm64 --iphonesimulator_archs arm64,x86_64 \
          --without calib3d --without dnn --without features2d --without flann --without gapi --without highgui \
          --without java --without js --without ml --without nonfree --without objdetect --without objc --without photo \
          --without python --without stitching --without ts --without video --without videoio --without videostab
          rm -rf build/opencv2.xcframework ; mkdir -p build/opencv2.xcframework/Headers/opencv2 dev sym
          cp build/iphoneos/opencv2.framework/opencv2 dev/opencv2.dylib
          cp build/iphonesimulator/opencv2.framework/opencv2 sym/opencv2.dylib
          cp -r build/iphoneos/opencv2.framework/Headers/* build/opencv2.xcframework/Headers/opencv2
          xcodebuild -create-xcframework -library dev/opencv2.dylib -library sym/opencv2.dylib -output build/opencv2.xcframework

    - name: Zip XCFramework
      run: |
        cd opencv-4.6.0/build
        zip -r opencv-ios-${OCV_VER}.zip opencv2.xcframework
        ls -l
        du -sh opencv-ios-${OCV_VER}.zip

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        retention-days: 90
        if-no-files-found: error
        path:
          opencv-4.6.0/build/opencv-*.zip
